# Package Manager

## Introduction - What is Package Manager

Posit Package Manager provides a secure, reliable, and scalable way to distribute and manage R and Python packages across Dash.

In a nutshell, when wanting to **install libraries**, you can just do it through your console and **libraries are fetch through package manager from cran, pyp, bioconductor even from Github !!**, without needing to go through individual repository on internet. All in one package!

## What can Package Manager do?

In context of Dash, Package Manager can do the following:

-   Search and install packages from CRAN, PyPI, and Bioconductor and even from Github - will showcase each bellow

-   Mirror public repositories inside your own firewall, even offline

-   Add your own internal packages and binaries

-   Improve security by blocking high-risk and unwanted packages

The list isn't exhaustive for what Package Manager is able to achieve. For example curating subsets of CRAN and PyPI into custom repositories is something that can be done. Yet, we haven't curated a list of libraries so that we allow users to download freely without any obstacles the desired libraries into their own environments. This is an advantage since a lot of libraries get updated.

Furthermore, if there is a library the presents high-risk for Dash platform, this is flagged in Package Manager and cannot be downloaded into your own environment.

## How to search libraries and install packages?

Open the link: [https://dash-pkmgr-prd.azure.defra.cloud/](https://dash-pkmgr-tst.azure.defra.cloud/)

If selecting the down arrow, you'll be able to see the repositories where libraries can be found.

```{r  echo=FALSE, out.width = '100%'}

knitr::include_graphics("images/package_manager_1.png")

```

### Searching for cran libraries and installation

Searching for dplyr library when choosing cran repository shows the way to install, any metadata and security issues. If there are no security issues / vulnerabilities then installation into R environment will show no problems. Copy the code and go in RStudio IDE on Workbench and paste it into the console for installation to take effect.

```{r  echo=FALSE, out.width = '100%'}

knitr::include_graphics("images/cran_pkgm.png")
```

### **Searching for pyp libraries and installation**

Searching for pandas library when choosing pyp repository shows the way to install, any metadata and security issues. If there are no security issues / vulnerabilities then installation into Python environment will show no problems. Copy the code and go into IDE of your choice,on Workbench where Python can be accessed, and paste it into terminal for installation to take effect.

```{r  echo=FALSE, out.width = '100%'}

knitr::include_graphics("images/pyp_pkgm.png")
```

### Searching for bioconductor libraries and installation

Searching for a4 library when choosing bioconductor repository shows the way to install, any metadata and security issues. If there are no security issues / vulnerabilities then installation into R environment will show no problems. Copy the code and go in RStudio IDE on Workbench and paste it into the console for installation to take effect.

```{r  echo=FALSE, out.width = '100%'}

knitr::include_graphics("images/biocond_pkgm.png")
```

### Searching for libraries on github and installation

Searching for sdg library when choosing git-python repository shows the way to install, any metadata and security issues. If there are no security issues / vulnerabilities then installation into Python environment will show no problems. Copy the code and go into IDE of your choice,on Workbench where Python can be accessed, and paste it into terminal for installation to take effect.

```{r  echo=FALSE, out.width = '100%'}

knitr::include_graphics("images/git_python_pkgm.png")
```
